generator client {
  provider = "prisma-client-js"
  output   = "../src/database/generated-prisma-client"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @map("id")
  email     String   @unique @map("email") @db.VarChar(255)
  username  String   @unique @map("username") @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  classes Class[] @relation("UserClasses")
  teams   Team[]  @relation("UserTeams")

  @@map("users")
}

model Class {
  id        String   @id @default(uuid()) @map("id")
  className String   @map("class_name") @db.VarChar(255)
  classCode String   @unique @map("class_code") @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  courses Course[]
  users   User[]   @relation("UserClasses")

  @@map("classes")
}

model Course {
  id         String   @id @default(uuid()) @map("id")
  courseName String   @map("course_name") @db.VarChar(255)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  classId String @map("class_id")
  class   Class  @relation(fields: [classId], references: [id])

  @@map("courses")
}

model Team {
  id        String   @id @default(uuid()) @map("id")
  teamName  String   @map("team_name") @db.VarChar(255)
  teamCode  String   @unique @map("team_code") @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  users User[] @relation("UserTeams")

  @@map("teams")
}
